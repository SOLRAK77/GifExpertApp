{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","i","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKlB,SACC,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UAAUH,GADjD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGKA,EAAKC,OAHV,uBAGTC,EAHS,EAGTA,KAEAC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAT3B,kBAaRM,GAbQ,4CAAH,sDCGPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACE,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAO,GACPa,SAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KAsBtC,OAhBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAQxB,IAEKC,EDfwBK,CAAa1B,GAAhCa,EAJuB,EAI5BN,KAAaa,EAJe,EAIfA,QAiBpB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACrDoB,GAAW,mBAAGJ,UAAU,mEAAb,wBAEb,qBAAKA,UAAU,aAAf,SAEYH,EAAOJ,KAAK,SAACC,EAAIiB,GACb,OAAQ,cAAC,EAAD,eAEAjB,GADCA,EAAIC,aEjC1B,SAASiB,IAAe,MAGA1C,mBAAS,CAAC,aAHV,mBAG5B2C,EAH4B,KAGjB5C,EAHiB,KAWnC,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI4C,EAAWpB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,W,MCjB7B8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.93370ee8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(categoria => [inputValue, ...categoria])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=x3j3hc98Z3kCdjW4nTA8SWe2OnuvAlzf`        \r\n        const resp = await fetch(url)\r\n        const{data} = await resp.json()        \r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id : img.id,\r\n                title : img.title,\r\n                url : img.images.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return(gifs);\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n      <div className=\"card animate__animated animate__backInDown\">\r\n          <img src={url} alt={title}/>\r\n          <p>{title}</p>\r\n      </div>            \r\n    )\r\n}\r\n","//import React, {useEffect, useState} from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs} from '../Hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem'\r\n/*import { getGifs } from '../helpers/getGifs'*/\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [contador, setContador] = useState(0);\r\n    //const [images, setImages] = useState([])\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    //console.log(data)\r\n    /*\r\n    useEffect(() => {\r\n        getGifs(category)\r\n                    .then(setImages)\r\n        console.log(images)\r\n    },[category])\r\n    */\r\n   \r\n\r\n    /*\r\n    const suma = () => {\r\n        setContador(contador + 1)\r\n    }\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>            \r\n            { loading && <p className=\"animate__animated animate__flash animate__fast animate__infinite\">Loading...</p> }\r\n\r\n            <div className=\"card--grid\">        \r\n                    {\r\n                        images.map( (img,i) => {\r\n                            return (<GifGridItem                                 \r\n                                key={img.id}\r\n                                {...img} />\r\n                            )\r\n                        })\r\n                    }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading : true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                //console.log(imgs)\r\n                setstate({\r\n                    data : imgs,\r\n                    loading : false\r\n                })\r\n                /*\r\n                setTimeout(() => {\r\n                    \r\n                }, 3000);\r\n                */\r\n            })            \r\n    },[])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\nexport default function GifExpertApp() {\r\n\r\n    //const categories = ['One pounch','Dragon Ball','Samurai X']\r\n    const [categories,setCategories] = useState(['Superman'])\r\n\r\n    /*\r\n    const addCategory = () =>{\r\n        setCategories([...categories,'Nueva categoria'])\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ul>\r\n             {                 \r\n                categories.map((category) => (\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category} \r\n                    />\r\n                ))\r\n             }   \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}